/*
g++ --std=c++20 -pthread -o ../_build/cpp/numeric_random_uniform_int_distribution.exe ./cpp/numeric_random_uniform_int_distribution.cpp && (cd ../_build/cpp/;./numeric_random_uniform_int_distribution.exe)
https://en.cppreference.com/w/cpp/numeric/random/uniform_int_distribution
*/
#include <random>
#include <iostream>
int main()
{
    std::random_device rd;  //Will be used to obtain a seed for the random number engine
    std::mt19937 gen(rd()); //Standard mersenne_twister_engine seeded with rd()
    std::uniform_int_distribution<> distrib(1, 6);
    for (int n=0; n<10; ++n)
        //Use `distrib` to transform the random unsigned int generated by gen into an int in [1, 6]
        std::cout << distrib(gen) << ' ';
    std::cout << '\n';
}

